"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.collectIgnoreLines = void 0;
const ts = require("typescript");
const utils = require("tsutils/util");
function collectIgnoreLines(sourceFile) {
    let ignoreLines;
    utils.forEachComment(sourceFile, (_, comment) => {
        const commentText = comment.kind === ts.SyntaxKind.SingleLineCommentTrivia
            ? sourceFile.text.substring(comment.pos + 2, comment.end).trim()
            : sourceFile.text.substring(comment.pos + 2, comment.end - 2).trim();
        if (commentText.includes('type-coverage:ignore-next-line')) {
            if (!ignoreLines) {
                ignoreLines = new Set();
            }
            const line = ts.getLineAndCharacterOfPosition(sourceFile, comment.pos).line;
            ignoreLines.add(line + 1);
        }
        else if (commentText.includes('type-coverage:ignore-line')) {
            if (!ignoreLines) {
                ignoreLines = new Set();
            }
            const line = ts.getLineAndCharacterOfPosition(sourceFile, comment.pos).line;
            ignoreLines.add(line);
        }
    });
    return ignoreLines;
}
exports.collectIgnoreLines = collectIgnoreLines;
